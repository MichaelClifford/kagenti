name: Build-Publish

on:
  # Run this workflow on pushes of tags like v1.0.0
  push:
    tags:
    - 'v*'
  # Allows also to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN the permissions to write packages
    permissions:
      contents: read
      packages: write

    steps:
      # 1. Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v5

      # 2. Set up QEMU for multi-architecture builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 3. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Log in to the GitHub Container Registry (ghcr.io)
      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5. `ui` Docker image 
      # This action automatically creates useful tags based on the Git event.
      # In this case, it will use the Git tag as the Docker image tag.
      - name: Extract Docker metadata
        id: ui-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/ui
          tags: |
            # extract tag from git ref, e.g., v1.0.0 -> 1.0.0
            type=ref,event=tag

      - name: Build and push ui Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./kagenti/ui
          file: ./kagenti/ui/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.ui-meta.outputs.tags }}
          labels: ${{ steps.ui-meta.outputs.labels }}

      # 6. `ui-oauth-secret` Docker image 
      # This action automatically creates useful tags based on the Git event.
      # In this case, it will use the Git tag as the Docker image tag.
      - name: Extract Docker metadata
        id: ui-oauth-secret-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/ui-oauth-secret
          tags: |
            # extract tag from git ref, e.g., v1.0.0 -> 1.0.0
            type=ref,event=tag

      - name: Build and push ui-oauth-secret Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./kagenti/auth/ui-oauth-secret
          file: ./kagenti/auth/ui-oauth-secret/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.ui-oauth-secret-meta.outputs.tags }}
          labels: ${{ steps.ui-oauth-secret-meta.outputs.labels }}

      # # 7. `client-registration` Docker image 
      # # This action automatically creates useful tags based on the Git event.
      # # In this case, it will use the Git tag as the Docker image tag.
      # - name: Extract Docker metadata
      #   id: client-registration-meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ghcr.io/${{ github.repository }}/client-registration
      #     tags: |
      #       # extract tag from git ref, e.g., v1.0.0 -> 1.0.0
      #       type=ref,event=tag

      # - name: Build and push client-registration Docker image
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: ./kagenti/auth/client-registration
      #     file: ./kagenti/auth/client-registration/Dockerfile
      #     push: true
      #     platforms: linux/amd64,linux/arm64
      #     tags: ${{ steps.client-registration-meta.outputs.tags }}
      #     labels: ${{ steps.client-registration-meta.outputs.labels }}